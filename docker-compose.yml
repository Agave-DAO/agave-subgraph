version: '3.5'

volumes:
  graph_pg_data:
    driver: local
  graph_ipfs_data:
    driver: local

x-graph-pg-base: &graph-pg-base
  POSTGRES_USER: graph-node
  POSTGRES_PASSWORD: let-me-in
  POSTGRES_DB: graph-node
  postgres_user: graph-node
  postgres_pass: let-me-in
  postgres_db: graph-node

services:
  thegraph-env:
    image: node:11
    command: tail -f /dev/null
    restart: always
    working_dir: /src
    volumes:
      - type: bind
        source: ./
        target: /src
    environment:
      TARGET: 'dev'
      GANACHE_URL: 'http://ethnode:8545'
    depends_on:
      - ethnode
      - graph-node
      - graph-ipfs

  graph-node:
    image: graphprotocol/graph-node
    depends_on:
      - ethnode
      - graph-postgres
      - graph-ipfs
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8030:8030'
      - '8020:8020'
    restart: always
    links:
      - "graph-postgres:db"
      - "ethnode"
    environment:
      <<: *graph-pg-base
      postgres_host: 'db'
      ipfs: 'graph-ipfs:5001'
      ethereum: 'hardhat:http://ethnode:8545'
      RUST_LOG: 'info'
      RUST_BACKTRACE: '1'

  graph-ipfs:
    image: ipfs/go-ipfs:v0.4.23
    restart: always
    volumes:
      - type: volume
        source: graph_ipfs_data
        target: /data/ipfs
    ports:
      - '5001:5001'

  graph-postgres:
    image: postgres
    command: ['postgres', '-cshared_preload_libraries=pg_stat_statements']
    environment:
      <<: *graph-pg-base
    restart: always
    volumes:
      - type: volume
        source: graph_pg_data
        target: /var/lib/postgresql/data

  ethnode:
    build:
      context: ./hardhat_docker_image
      dockerfile: ./Dockerfile
    command: npx hardhat --config ./hardhat.config.js --network hardhat node --hostname 0.0.0.0 --port 8545
    ports:
      - '8545:8545'
